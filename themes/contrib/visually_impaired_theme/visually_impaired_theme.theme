<?php

/**
 * @file
 * Functions to support theming in the visually_impaired_theme theme.
 */

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function visually_impaired_theme_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'layout-no-sidebars';
  }

  if (!empty($variables['page']['featured_top'])) {
    $variables['attributes']['class'][] = 'has-featured-top';
  }
}

/**
 * Implements hook_library_info_alter().
 */
function visually_impaired_theme_library_info_alter(&$libraries, $extension) {
  if ($extension == 'visually_impaired_theme' && isset($libraries['customcss'])) {
    // Path to files directory on server.
    $filesPath = \Drupal::service('file_system')
      ->realpath(\Drupal::config('system.file')
        ->get('default_scheme') . "://");

    if (!empty($filesPath)) {
      // Path to visually_impaired_theme directory.
      $vitPath = $filesPath . '/visually_impaired_theme';
      // Path to custom.css.
      $customCSS = $vitPath . '/custom.css';
      // If directory not found, create it.
      if (!is_dir($vitPath)) {
        if (!mkdir($vitPath)) {
          \Drupal::logger('visually_impaired_theme')->error('Can not create directory!');
          return;
        }
      }
      // If custom.css not exists, create it.
      if (!file_exists($customCSS)) {
        if (!touch($customCSS)) {
          \Drupal::logger('visually_impaired_theme')->error('Can not create custom.css file!');
          return;
        }
      }

      // Get relative path to custom.css.
      $customCSSrelative = \Drupal::service('file_url_generator')->generateAbsoluteString(\Drupal::config('system.file')->get('default_scheme') . "://") . 'visually_impaired_theme/custom.css';
      // Attach css to pages.
      unset($libraries['customcss']['css']['theme']['custom.css']);
      $libraries['customcss']['css']['theme'][$customCSSrelative] = [];
    }
    else {
      \Drupal::logger('visually_impaired_theme')->error('Can not get public files path!');
    }
  }
}
